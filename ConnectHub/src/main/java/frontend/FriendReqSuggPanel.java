/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package frontend;

import backend.AccountManagement;
import backend.DataBase;
import backend.Friend;
import backend.FriendManagement;
import backend.FriendRequests;
import backend.NewsFeed;
import backend.User;
import backend.UserSession;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

/**
 *
 * @author malak
 */
public class FriendReqSuggPanel extends javax.swing.JPanel {
User user;
    private DefaultListModel<String> friendsListModel = new DefaultListModel<>();
    private DefaultListModel<String> requestsListModel = new DefaultListModel<>();
    private DefaultListModel<String> suggestionsListModel = new DefaultListModel<>();
    private boolean requestlistUpdate = false;
    private boolean friendlistUpdate = false;
    private boolean suggestionlistUpdate = false;

    public FriendReqSuggPanel() {
        initComponents();

        // Set the JList models to DefaultListModel
    }

    public void updateFriendsList(User u) {
        
        friendlistUpdate = true;
        ArrayList<String> linerep = NewsFeed.fetchFriends(u);
        friendsListModel.clear();

        for (int i = 0; i < linerep.size(); i++) {
            friendsListModel.addElement(linerep.get(i));
        }
        System.out.println("Friends List Data: " + linerep);
        friendsList.setModel(friendsListModel);
        this.user = u;
        friendlistUpdate = false;
    }

    public void updateSuggestionsList(User u) {
       
        suggestionlistUpdate = true;
        ArrayList<String> linerep = FriendManagement.fetchFriendsSuggestions(u);
        suggestionsListModel.clear();

        for (String string : linerep) {
            suggestionsListModel.addElement(string);
        }

        System.out.println("Friends List Data: " + linerep);
        suggestionsList.setModel(suggestionsListModel);
        suggestionlistUpdate = false;
    }

    public void updateRequestsList(User u) {

        requestlistUpdate = true;
        ArrayList<String> linerep = u.getLineRepOfFriendReq();
        requestsListModel.clear();

        for (int i = 0; i < linerep.size(); i++) {
            requestsListModel.addElement(linerep.get(i));
        }
        requestsList.setModel(requestsListModel);
        requestlistUpdate = false;
        System.out.println("Friends List Data: " + linerep);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        friendsList = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        requestsList = new javax.swing.JList<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        suggestionsList = new javax.swing.JList<>();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();

        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        friendsList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        friendsList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        friendsList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                friendsListValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(friendsList);

        requestsList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        requestsList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        requestsList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                requestsListValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(requestsList);

        suggestionsList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        suggestionsList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        suggestionsList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                suggestionsListValueChanged(evt);
            }
        });
        jScrollPane3.setViewportView(suggestionsList);

        jLabel6.setFont(new java.awt.Font("Segoe UI Historic", 1, 18)); // NOI18N
        jLabel6.setText("Your Friends");

        jLabel5.setFont(new java.awt.Font("Segoe UI Historic", 1, 18)); // NOI18N
        jLabel5.setText("Friend Requests");

        jLabel7.setFont(new java.awt.Font("Segoe UI Historic", 1, 18)); // NOI18N
        jLabel7.setText("People You May Know");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 466, Short.MAX_VALUE)
                        .addComponent(jScrollPane2)
                        .addComponent(jScrollPane3))
                    .addComponent(jLabel7)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addContainerGap(114, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(80, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void friendsListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_friendsListValueChanged
        if(!friendlistUpdate){
        String selectedFriend = friendsList.getSelectedValue();

        if (selectedFriend == null) {
            JOptionPane.showMessageDialog(this, "No requesttttt selected");
            return;
        }
        String[] token = selectedFriend.split(" ");
        String username = user.getUsername();
        Friend friend = Friend.getFriend(username, token[0]);
        if (friend == null) {
            JOptionPane.showMessageDialog(this, "There is no such friend");
            return;
        }

        String[] options = {"Remove", "Block"};
        int choice = JOptionPane.showOptionDialog(
                null,
                "Would you like to: ",
                ("Friend" + friend.getUsername()),
                JOptionPane.DEFAULT_OPTION,
                JOptionPane.INFORMATION_MESSAGE,
                null, options, options[0]
        );
        if (choice == 0) {
            FriendManagement.removeFriend(user, friend);
            friendlistUpdate = true;
            friendsListModel.removeElement(selectedFriend);
            friendlistUpdate = false;
            updateFriendsList(user);
            updateSuggestionsList(user);
        } else if (choice == 1) {
            FriendManagement.blockFriend(user, friend);
            friendlistUpdate = true;
            friendsListModel.removeElement(selectedFriend);
            friendlistUpdate = false;
            updateFriendsList(user);
            /*must update blocked*/
            JOptionPane.showMessageDialog(null, "Friend removed successfully");
        }}
    }//GEN-LAST:event_friendsListValueChanged
    private void requestsListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_requestsListValueChanged
        // TODO add your handling code here:
        if (!requestlistUpdate) {
            String selectedFriend = requestsList.getSelectedValue();

            if (evt.getValueIsAdjusting()) {
                return; // Ignore intermediate events
            }
            if (selectedFriend == null) {
                // No item is selected, exit the method
                JOptionPane.showMessageDialog(this, "No request selected");
                return;
            }

            String username = user.getUsername();
            FriendRequests friendrequest = user.getFriendReq(selectedFriend);
            if (friendrequest == null) {
                JOptionPane.showMessageDialog(this, "Error finding friendrequest");
                return;
            }

            String[] options = {"Accept", "Remove"};
            int choice = JOptionPane.showOptionDialog(
                    null,
                    "Would you like to: ",
                    ("Request by" + friendrequest.getUsername()),
                    JOptionPane.DEFAULT_OPTION,
                    JOptionPane.INFORMATION_MESSAGE,
                    null, options, options[0]
            );

            System.out.println("User selected: " + selectedFriend);
            if (choice == 0) {
                FriendManagement.friendRequest(true, user, friendrequest, false);
                updateRequestsList(user);  // Refresh the requests list
                updateFriendsList(user);
                updateSuggestionsList(user);
                JOptionPane.showMessageDialog(null, "Friend request accepted successfully");

            } else if (choice == 1) {
                FriendManagement.friendRequest(false, user, friendrequest, true);
                updateRequestsList(user);  // Refresh the requests list
                updateFriendsList(user);
                updateSuggestionsList(user);
                JOptionPane.showMessageDialog(null, "Friend request denied successfully");
            }
        }
    }//GEN-LAST:event_requestsListValueChanged


    private void suggestionsListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_suggestionsListValueChanged
        // TODO add your handling code here:
       
        if(!suggestionlistUpdate){
        String selectedFriend = suggestionsList.getSelectedValue();
        String[] token = selectedFriend.split(" ");
        String username = user.getUsername();
        Friend suggestedFriend = FriendManagement.getFriendSuggested(user, token[0]);
        if (suggestedFriend == null) {
            JOptionPane.showMessageDialog(this, "Error finding suggestedFriend");
            return;
        }

        System.out.println("User selected: " + selectedFriend);

        String[] options = {"Send Request", "Ignore"};
        int choice = JOptionPane.showOptionDialog(
                null,
                "Would you like to: ",
                ("Suggested Friend" + suggestedFriend.getUsername()),
                JOptionPane.DEFAULT_OPTION,
                JOptionPane.INFORMATION_MESSAGE,
                null, options, options[0]
        );

        System.out.println("User selected: " + selectedFriend);
        if (choice == 0) {
            FriendRequests fr = new FriendRequests(user.getEmail(), user.getUsername(), user.getUserId(), suggestedFriend.getUserId());
            FriendManagement.requestSent(fr, AccountManagement.findUser(suggestedFriend.getUsername()));
            JOptionPane.showMessageDialog(null, "Friend request sent successfully");
        } else if (choice == 1) {

        }}
    }//GEN-LAST:event_suggestionsListValueChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<String> friendsList;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JList<String> requestsList;
    private javax.swing.JList<String> suggestionsList;
    // End of variables declaration//GEN-END:variables
}
