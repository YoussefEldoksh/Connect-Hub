/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package frontend;

import backend.Account;
import backend.AccountManagement;
import backend.DataBase;
import backend.Group;
import backend.GroupManagement;
import backend.GroupRequests;
import backend.GroupsDataBase;
import backend.NewsFeed;
import backend.User;
import backend.UserSession;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

/**
 *
 * @author malak
 */
public class GroupSuggestionsPanel extends javax.swing.JPanel {
User user;
    private DefaultListModel<String> suggestionsListModel = new DefaultListModel<>();
    private boolean suggestionlistUpdate = false;

    public GroupSuggestionsPanel() {
        initComponents();

    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane3 = new javax.swing.JScrollPane();
        suggestionsList = new javax.swing.JList<>();
        jLabel7 = new javax.swing.JLabel();

        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        suggestionsList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        suggestionsList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        suggestionsList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                suggestionsListValueChanged(evt);
            }
        });
        jScrollPane3.setViewportView(suggestionsList);

        add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 74, 466, -1));

        jLabel7.setFont(new java.awt.Font("Segoe UI Historic", 1, 18)); // NOI18N
        jLabel7.setText("Group Suggestions");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 31, -1, -1));
    }// </editor-fold>//GEN-END:initComponents


    private void suggestionsListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_suggestionsListValueChanged

       
        if(!suggestionlistUpdate){
        String selectedGroup = suggestionsList.getSelectedValue();
        String[] token = selectedGroup.split(" ");
        String username = user.getUsername();
        Group suggestedGroup = GroupManagement.getGroupSuggested(user, token[1]);
        if (suggestedGroup== null) {
            JOptionPane.showMessageDialog(this, "Error finding suggested Group");
            return;
        }

        System.out.println("Group selected: " + selectedGroup);

        String[] options = {"Join", "Ignore"};
        int choice = JOptionPane.showOptionDialog(
                null,
                "Would you like to: ",
                ("Suggested Group" + suggestedGroup.getGroupName()),
                JOptionPane.DEFAULT_OPTION,
                JOptionPane.INFORMATION_MESSAGE,
                null, options, options[0]
        );

        System.out.println("Group selected: " + selectedGroup);
        if (choice == 0) {
            GroupRequests gr = new GroupRequests(user.getUserId(),suggestedGroup.getGroupName());
            Group group = GroupsDataBase.getInstance().getGroupByName(token[1]);
            
            group.addUserToGroupRequests(user.getUserId());
            suggestionlistUpdate= true;
           suggestionsListModel.removeElement(selectedGroup);
           suggestionlistUpdate= false;
            JOptionPane.showMessageDialog(null, "Group request was sent successfully");
            loadSuggestions();
            
        } else if (choice == 1) {
                
                JOptionPane.showMessageDialog(null, "Group request denied successfully");
                suggestionlistUpdate= false;
                loadSuggestions();
        }}
    }//GEN-LAST:event_suggestionsListValueChanged

private void loadSuggestions() {
        suggestionlistUpdate = true;
        suggestionsListModel.clear();

        // Get group suggestions for the user
        ArrayList<String> suggestedGroups = GroupManagement.groupLineRep();
        for (String group : suggestedGroups) {
            suggestionsListModel.addElement(group);
        }

        suggestionlistUpdate = false;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JList<String> suggestionsList;
    // End of variables declaration//GEN-END:variables
}
