/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package frontend;

import backend.AccountManagement;
import backend.Friend;
import backend.NewsFeed;
import backend.Posts;
import backend.User;
import backend.UserSession;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import net.miginfocom.swing.MigLayout;

/**
 *
 * @author malak
 */
public class PostsNewsPanel extends javax.swing.JPanel {

    /**
     * Creates new form PostsNewsPanel
     */
    public PostsNewsPanel() {

        initComponents();   
        init();
    }

    public void init() {
        PostsList.setLayout(new MigLayout());
        showPosts();
    }

    public void showPosts() {
        PostsList.removeAll();

        ArrayList<Posts> posts = NewsFeed.fetchPosts(UserSession.getCurrentUser());

        for (Posts post : posts) {
           if(post.getImagePath()!=null && !post.getImagePath().isEmpty())
           {
               System.out.println(post.getImagePath());
               PostsList.add(new PostPanelWithPhoto(new ImageIcon(post.getImagePath()), post.getContent(), AccountManagement.findUsername(post.getAuthorID()),post.getTimestamp().format(DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss a"))),  "wrap");
           }
          
           else
           {
               PostsList.add(new PostPanelWithoutPhoto(post.getContent(),AccountManagement.findUsername(post.getAuthorID()),post.getTimestamp().format(DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss a"))), "wrap");
           }
        }
        PostsList.revalidate();
        PostsList.repaint();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PostsList = new javax.swing.JLayeredPane();

        setBackground(new java.awt.Color(204, 204, 255));

        javax.swing.GroupLayout PostsListLayout = new javax.swing.GroupLayout(PostsList);
        PostsList.setLayout(PostsListLayout);
        PostsListLayout.setHorizontalGroup(
            PostsListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 500, Short.MAX_VALUE)
        );
        PostsListLayout.setVerticalGroup(
            PostsListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 494, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(PostsList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(PostsList)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLayeredPane PostsList;
    // End of variables declaration//GEN-END:variables
}
